// <auto-generated />
using System;
using FleetMgmt.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FleetMgmt.Data.Migrations
{
    [DbContext(typeof(FmDbContext))]
    [Migration("20180730112215_TripsAccidents")]
    partial class TripsAccidents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FleetMgmt.Data.Entities.Accident", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccidentTime");

                    b.Property<bool>("CoveredByInsurance");

                    b.Property<decimal?>("Fine");

                    b.Property<bool>("IsOwnFault");

                    b.Property<Guid>("TripId");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Accidents");
                });

            modelBuilder.Entity("FleetMgmt.Data.Entities.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("FleetMgmt.Data.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DiverId");

                    b.Property<Guid?>("DriverId");

                    b.Property<int>("Length");

                    b.Property<DateTime>("TripDate");

                    b.Property<Guid>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("FleetMgmt.Data.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChassisNumber");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("EngineNumber");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("FleetMgmt.Data.Entities.Accident", b =>
                {
                    b.HasOne("FleetMgmt.Data.Entities.Trip", "Trip")
                        .WithMany()
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FleetMgmt.Data.Entities.Trip", b =>
                {
                    b.HasOne("FleetMgmt.Data.Entities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.HasOne("FleetMgmt.Data.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
